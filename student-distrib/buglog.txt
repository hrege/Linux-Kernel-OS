###################################

			Bug Log
		VictoriOS Secret

###################################

Jonathan Mullen			 Sam Morris
Hershel Dave-Rege		Austin Born


### Checkpoint 1: ###

Bug:
Always getting a general protection fault and if while(1) if removed from handler we get it over and over again.
Person: Jonathan
Solution:
PIT was enabled. Disabled all interrupts until their specific set up to prevent this.



### Checkpoint 2:   ###

Bug: RTC_WRITE seemed to break RTC Interrupts
Person: Jonathan
Solution:
had sti() and cli() in the wrong order lol

Bug: RTC changed speeds incorrectly
Person: Jonathan
Solution:
Higher Rate = lower Frequency apparently

Bug: Caps and shift never turn off
Person: Sam
Solution:
Needed to put release shift scancode handler and caps lock bug was cause because I(Sam) remapped my caps lock key to give my windows keyboard a CMD button for my Mac because my onboard keyboard and trackpad broke for no reason. 



### Checkpoint 3: ###

Bug:  Target Remote does not work
Person: Hershel
Solution:
Hershel needs to open test_debug

Bug: IRET Appeared to Segfault
Person: Sam
Solution: 
Error was actually in sys_calls (not initializing fd_array).

Bug: paging had issues initializing
Person: Austin
Solution:
Changed the "i" to a "j" (the for loop specified i, but j was used in the loop variables...).

Bug: Constant Variables were not working properly in sys_calls_link.S
Person: Sam
Solution:
Declare equivalent local versions of the variables and call those instead.

Bug: Can backspace over the 391os> prompt
Person: Sam
Solution:
Keep track of line start and increment it past that and stop backspace at line start

Bug: Persistant Page Fault in Halt
Person: Sam, Hershel, Jonathan
Solution: 
Logic for restoring the esp and ebp for the parent was wrong. Were restoring from the parent
pcb but that info is stored in the current pcb. Changing that allowed us to halt successfully
Time Spent: 3.75 weeks



### Checkpoint 4: ###

Bug: Page Fault in vidmap
Person: Jonathan and Austin
Solution:
Turns out that the paging table set up funtion only takes in incrememnts of full MB but the video 
memory (0xB8000) is not aligned to a full MB. The solution we decided on was to map the new page to 
0 instead of xB8000 but set the screen start pointed to B8000 + new page location.
This works since video memory is not close to 4MB in size. 

Bug: All reads going to terminal read
Person: Sam
Solution:
Sys_open always returned 0 instead of the fd 

Bug: Passing SYSERR test #8 (executing bad syscall numbers) but page fualting
Person: Jonathan
Solution:
The handling for bad sys calls used ret instead of IRET meaning when we tried to do IRET later it was messed up. Changed to IRET



### Checkpoint 5: ###

Bug: Switching with user processes active caused page faults and all terminals had the same counter running when that process was executed.
Person: Sam
Solution: Added paging_switch used in sys_execute.c to the active process when switching terminals

Bug: The next shell prompt (391OS>) is on the same line as the "hello, Prof. Bailey" 
Person: Jonathan
Solution:
Actually, also occurs after some other programs too - hello was just most noticeable. 
Added a check in halt to see whether line start was at 0. If not, output a new line and set line start to 0.

Bug: After virtualizing RTC cannot switch between terminals after a while
Person: Jonathan
Solution: Click into QEMU window

Bug: Terminal wackiness
Person:Sam
Solution:Must check PS/2 scan codes instead of character translations in keyboard handler. 

Bug: Not able to backspace far into shell prompt line
Person: Sam
Solution: In terminal write for setting the line to start after a terminal write we used a macro for \n. This macro was changed to the scancode for enter to fix the 
above bug(Terminal Wackiness). Swapping out the macro for the newline character corrected the issue.

Bug: Ctrl discontinuous across terminal switches
Person:Jonathan
Solution: Updated the incoming terminal's ctrl flag variable with the current ctrl flag variable and then set current to 0.

Bug: Context switching bug
Person:Sam
Solution:Needed to save separate stack frames for jumping to execute from halt and for terminal switches

Bug: Shell prompt sometimes say 91OS> instead of 391OS>
Person: Jonathan
Solution:
This was occuring whan we had a new line added in halt to get the prompt on it's own line (see bug 2 of cp5) and the current line (before newline) was the last line in the window. I'd used putc which does not check for scrolling.
Changed this newline to use terminal_write. 